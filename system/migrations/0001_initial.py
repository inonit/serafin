# Generated by Django 2.2.19 on 2021-03-09 13:29

import collections
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True, verbose_name='title')),
                ('display_title', models.CharField(max_length=64, verbose_name='display title')),
                ('content_type', models.CharField(editable=False, max_length=32, verbose_name='content type')),
                ('admin_note', models.TextField(blank=True, verbose_name='admin note')),
                ('data', jsonfield.fields.JSONField(default=[], load_kwargs={'object_pairs_hook': collections.OrderedDict})),
            ],
            options={
                'verbose_name': 'content',
                'verbose_name_plural': 'contents',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True, verbose_name='title')),
                ('display_title', models.CharField(max_length=64, verbose_name='display title')),
                ('about', models.TextField(blank=True, null=True, verbose_name='about')),
                ('style', models.CharField(blank=True, choices=[('css/style.css', 'Default stylesheet'), ('css/style-nalokson.css', 'Nalokson'), ('css/style-miksmaster.css', 'Miksmaster'), ('css/style-miksmaster-alt.css', 'Miksmaster alternate')], max_length=128, null=True, verbose_name='stylesheet')),
                ('from_email', models.CharField(blank=True, max_length=128, null=True, verbose_name='from email')),
                ('admin_note', models.TextField(blank=True, verbose_name='admin note')),
                ('is_lock', models.BooleanField(default=False, verbose_name='is program lock')),
            ],
            options={
                'verbose_name': 'program',
                'verbose_name_plural': 'programs',
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^[^ ]+$', 'No spaces allowed')], verbose_name='name')),
                ('display_name', models.CharField(blank=True, default='', max_length=64, verbose_name='display name')),
                ('admin_note', models.TextField(blank=True, verbose_name='admin note')),
                ('value', models.CharField(blank=True, default='', max_length=32, verbose_name='initial value')),
                ('user_editable', models.BooleanField(default=False, verbose_name='user editable')),
                ('random_type', models.CharField(blank=True, choices=[('boolean', 'boolean'), ('numeric', 'numeric'), ('string', 'string')], max_length=16, null=True, verbose_name='randomization type')),
                ('randomize_once', models.BooleanField(default=False, verbose_name='randomize once')),
                ('range_min', models.IntegerField(blank=True, null=True, verbose_name='range min (inclusive)')),
                ('range_max', models.IntegerField(blank=True, null=True, verbose_name='range max (inclusive)')),
                ('random_set', models.TextField(blank=True, verbose_name='random string set')),
                ('is_array', models.BooleanField(default=False, verbose_name='is array')),
                ('optional_values', models.CharField(blank=True, max_length=512, null=True, verbose_name='optional values')),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='system.Program', verbose_name='program')),
            ],
            options={
                'verbose_name': 'variable',
                'verbose_name_plural': 'variables',
                'ordering': ('display_name', 'name', 'value'),
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True, verbose_name='title')),
                ('display_title', models.CharField(max_length=64, verbose_name='display title')),
                ('route_slug', models.CharField(default=None, max_length=64, null=True, unique=True, verbose_name='route slug')),
                ('is_open', models.BooleanField(default=False, verbose_name='is open')),
                ('admin_note', models.TextField(blank=True, verbose_name='admin note')),
                ('start_time_delta', models.IntegerField(default=0, verbose_name='start time delta')),
                ('start_time_unit', models.CharField(choices=[('hours', 'hours'), ('days', 'days')], default='hours', max_length=32, verbose_name='start time unit')),
                ('end_time_delta', models.IntegerField(default=0, verbose_name='end time delta')),
                ('end_time_unit', models.CharField(choices=[('hours', 'hours'), ('days', 'days')], default='hours', max_length=32, verbose_name='end time unit')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='first start time')),
                ('scheduled', models.BooleanField(default=False, verbose_name='scheduled')),
                ('interval', models.IntegerField(default=0, verbose_name='interval delta')),
                ('trigger_login', models.BooleanField(default=True, verbose_name='trigger login')),
                ('data', jsonfield.fields.JSONField(default='{"nodes": [], "edges": []}', load_kwargs={'object_pairs_hook': collections.OrderedDict})),
                ('content', models.ManyToManyField(blank=True, to='system.Content', verbose_name='content')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.Program', verbose_name='program')),
            ],
            options={
                'verbose_name': 'session',
                'verbose_name_plural': 'sessions',
            },
        ),
        migrations.CreateModel(
            name='ProgramUserAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='start time')),
                ('time_factor', models.DecimalField(decimal_places=3, default=1.0, max_digits=5, verbose_name='time factor')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.Program', verbose_name='program')),
            ],
            options={
                'verbose_name': 'user access',
                'verbose_name_plural': 'user accesses',
            },
        ),
    ]
